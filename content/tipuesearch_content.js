var tipuesearch = {"pages": [{'title': 'About', 'text': '這裡是國立虎尾科技大學, 機械設計工程系協同產品設計實習(Collaborative Product Design Practice)的課程網頁. \n 課程網頁:  https://mde.tw/cd2024 \n 網誌:  https://mde.tw/cd2024/blog \n 簡報:  https://mde.tw/cd2024/reveal \n 倉儲:  https://github.com/mdecycu/cd2024 \n 四技機械設計二甲:  學期代號 1122 課號 0838 \n 四技機械設計二乙:  學期代號 1122 課號 0849 \n \n 教育版帳號\xa0microsoftonline 登入點:\xa0 https://login.microsoftonline.com/ \xa0 \n MS Team code:\xa0p0961sy (for @nfu users only) \n 下載可攜程式環境:  portable_2024.7z  (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB) \n 下載\xa0 miktex-portable.7z  (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) \n 閱讀資料: \n https://www.google.com/search?q=sap+vs+odoo  (與 SAP 及 ODOO 有關的搜尋) \n 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf  or  local download  (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) \n \n 課程目標: \n \n 讓學員了解如何利用 Web-based 環境( Github 、 Onshape )、近端套件( CoppeliaSim ) 以及  Odoo PLM  系統進行協同產品設計,  https://national-formosa-university.odoo.com . \n 讓學員了解如何利用 Replit、Codespaces 與 localhost 維護協同網站內容. \n \n 課程評分: \n 學員每週編寫網誌內容佔 40% \n 每週上課內容摘要與分組報告執行分工及進度整理 \n 相關資料收集與閱讀心得 \n 分組期中報告 (LaTeX -> pdf) 與簡報影片 (OBS -> mp4) 佔 20% \n 每組至多 8 人, 期中報告題目:\xa0 ODOO PLM  在協同產品設計上的應用 - 以 鋼球平衡台機電控制系統設計 為例 \n 分組期末報告 (LaTeX -> pdf) 與簡報影片 (OBS -> mp4) 佔 40% \n 期末報告題目: 網際綜合球類競賽機器人協同設計與模擬 \n 競技場景中必須納入數位計時器與類比記分機構 \n 每場競技時間為 10 分鐘 \n 每隊球員機器人依照各組人數平均分為兩隊 \n 每位機器人球員必須同時具備踢球、取球與投球機構 \n 雙方陣營各有足球門與籃球框各一具 \n 球場中由裁判程式於開場時, 在球場正中央落下 10 球 \n 將球踢進對方球門者得 1 分, 將球投入對方籃框者得 5 分 \n 參考資料:  https://github.com/mdecd2023/2a3-pj3ag4 \n 球場參考規格: \n 競技球: 白色, 直徑 0.1m, 重量 0.5kg \n 場地: 長 4m x 寬 2.5m, 外圍以足夠高度之隱形柵欄區隔 \n 足球門: 長 0.6m, 高 0.3m, 寬 0.1m \n 籃板: 長 0.3m, 高 0.2m, 寬 0.1m, 位於足球門上方中央 \n 籃框: 由籃板向場內距離 0.1m, 內徑 0.2m, 框管直徑 0.02 \n 球員尺寸範圍: 長寬高各 0.2m, 重量 5kg \n \n soccer field image from  public domain . \n \n 先前課程網站: \n http://wcm.cycu.org:88/github/cadnote/  (電腦輔助設計與實習筆記,\xa0僅能從系上 IPv6 網段擷取, 因 OneDrive 教育版容量限縮, 部分資料已經無法下載) \n \n 行事曆 \n  全頁檢視  \n', 'tags': '', 'url': 'About.html'}, {'title': 'odoo', 'text': 'odoo story:  https://www.odoo.com/zh_TW/blog/odoo-news-5/the-odoo-story-56 \n pricing stratege \n https://github.com/odoo/documentation \n 協同產品設計實習: \n https://national-formosa-university.odoo.com \n 設定 - 邀請新的使用者 - 產品生命週期管理 (under 50703199 At mde dot nfu) \n https://en.wikipedia.org/wiki/Odoo \n https://github.com/odoo/odoo \n https://github.com/twtrubiks/odoo-development-environment-tutorial \n https://ithelp.ithome.com.tw/m/articles/10263189 \n https://github.com/OmniaGit/odooplm \n https://odooplm.omniasolutions.website/ \n https://github.com/CadQuery/cadquery \n', 'tags': '', 'url': 'odoo.html'}, {'title': 'odoo17', 'text': 'odoo17  配合 PostgreSQL 12.4.1 \n PostgreSQL 服務: \n "C:\\Program Files\\Odoo 17.0.20240129\\PostgreSQL\\bin\\pg_ctl.exe" runservice -N "PostgreSQL_For_Odoo" -D "C:\\Program Files\\Odoo 17.0.20240129\\PostgreSQL\\data" -w \n cd2024 將探討如何在 Ubuntu Server 中安裝配置並使用 Odoo 17 \n cad2023 已經利用 Ubuntu Server 建立  s.cycu.org , 讓多人能在自架主機上進行協同網站內容管理. \n', 'tags': '', 'url': 'odoo17.html'}, {'title': 'LaTeX', 'text': '下載\xa0 miktex-portable.7z  (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) \n 參考資料: \n https://github.com/mdecd2023/2a3-pj3ag4 \n', 'tags': '', 'url': 'LaTeX.html'}, {'title': 'postgresql', 'text': 'postgres 是一套開源的分散式資料庫管理系統, exam.cycu.org 線上考試系統伺服器的資料就是存放在 PostgreSQL 資料庫中. \n https://github.com/postgres/postgres \n https://github.com/coleifer/peewee \n https://www.sqlite.org \n https://github.com/chiamingyen/pygrouf \n https://www2.fossil-scm.org \n https://github.com/mdecycu/fossiloauth \n https://github.com/mdecycu/fossilapp \n https://www.postgresqltutorial.com/ \n https://docs.postgresql.tw/tutorial \n https://www.tutorialspoint.com/postgresql/ \n', 'tags': '', 'url': 'postgresql.html'}, {'title': 'Topics', 'text': '教育版帳號\xa0microsoftonline 登入點:\xa0 https://login.microsoftonline.com/ \xa0 \n MS Team code:\xa0 p0961sy  (for @nfu users only) \n 下載可攜程式環境:  portable_2024.7z  (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB) \n Reading: \n 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf  or  local download  (password required) \n ( Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析 ) \n This paper objectives revolve around analyzing the integration PLM and MES systems from a theoretical perspective and comment on the use of the Odoo software tool to implement said integration. \n ERP -  Entriprise Resource Planning  企業資源規劃 \n MES -  Manufacturing Execution System  製造執行系統 \n PLM -  Product Lifecycle Management  產品生命週期管理 \n Industry 4.0  工業 4.0 \n https://www.odoo.com/ \n https://national-formosa-university.odoo.com  (管理者為 50703199 At mde dot nfu dot tw) \n 如何在 Ubuntu 安裝 ODOO? \n https://www.google.com/search?q=odoo+virautlbox+ubuntu \n https://www.youtube.com/watch?v=94KyFyNPzh0 \n \n \n 利用 tracert 指令查詢伺服器所在位置. \n Y:\\>tracert national-formosa-university.odoo.com 在上限 30 個躍點上 追蹤 national-formosa-university.odoo.com [104.155.209.1] 的路由: \xa0 1\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0 140.130.17.254 \xa0 2\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0 192.168.105.254 \xa0 3\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0 192.168.102.252 \xa0 4\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0 203-69-229-65.hinet-ip.hinet.net [203.69.229.65] \xa0 5\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0\xa0\xa0 <1 ms\xa0 168-95-229-182.tlhn-3302.hinet.net [168.95.229.182] \xa0 6\xa0\xa0\xa0\xa0 4 ms\xa0\xa0\xa0\xa0 4 ms\xa0\xa0\xa0\xa0 4 ms\xa0 220-128-19-46.chch-3032.hinet.net [220.128.19.46] \xa0 7\xa0\xa0\xa0\xa0 *\xa0\xa0\xa0\xa0\xa0\xa0\xa0 *\xa0\xa0\xa0\xa0\xa0\xa0\xa0 *\xa0\xa0\xa0\xa0 要求等候逾時。 \xa0 8\xa0\xa0\xa0\xa0 4 ms\xa0\xa0\xa0\xa0 3 ms\xa0\xa0\xa0\xa0 3 ms\xa0 220-128-9-13.tyfo-3335.hinet.net [ 220.128.9.13 ] \xa0 9\xa0\xa0\xa0\xa0 4 ms\xa0\xa0\xa0\xa0 4 ms\xa0\xa0\xa0\xa0 4 ms\xa0  142.250.169.122 \xa010\xa0\xa0\xa0\xa0 7 ms\xa0\xa0\xa0\xa0 7 ms\xa0\xa0\xa0\xa0 7 ms\xa0 1.209.155.104.bc.googleusercontent.com [ 104.155.209.1 ] 追蹤完成。 \n \n 如何利用隨身碟、Replit 與 Codespaces 維護個人與分組的網站內容? \n 如何在 Replit  編寫網誌以及製作網際簡報? 相同流程是否可用於  Codespaces ? \n 如何在  CoppeliaSim  環境中, 利用 IPv6  ZeroMQ Remote API  Python 進行兩個自由度的鋼球平衡檯自動控制系統模擬? \n', 'tags': '', 'url': 'Topics.html'}, {'title': 'Practice', 'text': '練習1: 請各分組製作一個 Web-based 網誌與簡報, 該如何利用隨身碟、  Replit  與  Codespaces  中維護個人與分組的網站內容? \n 練習2: 請各分組製作一個 Web-based 網誌與簡報, 說明如何在  CoppeliaSim  環境中, 利用 IPv6  ZeroMQ Remote API  Python 進行兩個自由度的鋼球平衡檯自動控制系統模擬? \n \n 練習3: 建立 foot_basket_ball 模擬場景 \n 延續 cd2023 的足球競技模擬場景檔案:\xa0 cd2023_pj3_football_field_specification_ttt.7z  (需要密碼) \n 產品設計不是一項簡單的事, 尤其當設計的目的, 是希望建構一套可以永續且韌性較強的組成, 而非單單只想得到能應付當下需求的內容. \n 以 cd2024 的分組協同期末專案而言, 可以在上列 cd2023 課程中的場景加以延伸, 其中將碰到以下議題: \n \n 附加的零組件要採用何種套件製作, 當團隊選擇一項 MCAD(Mechanical Computer Aided Design, 電腦輔助設計) 套件後, 隨即便產生, 協同團隊成員是否都能使用所選擇的套件? 各成員所使用同一套件的不同版本進行零組件繪圖, 之後的協同流程會不會產生問題? \n 當零件在各協同成員的 MCAD 套件中進行繪圖, 是否使用相同的單位尺寸設定? 各零組件選擇不同的絕對與相對座標系統, 對於接下來在不同套件間的轉檔, 會不會產生問題, 或者讓協同設計流程更加繁瑣? \n 從 MCAD 將零組件轉出時, 各成員即便選擇了相同的輸出(Export)檔案格式, 不同的轉檔格式疏密度, 對於後續的零組件應用有沒有影響? \n 當零組件轉入機電模擬系統時, 將牽涉到輸入(Import)縮放比例, 以及各零件轉入後的絕對與相對座標選擇, 不同的選擇會不會對後續的動態模擬系統設定造成一定的影響?尤其過程中牽涉開放機構(Open-chain) 與封閉(Closed-chain)機構組件時, 選擇不同的零組件絕對與區域座標系統之後, 會不會對之後的機構連桿運動設定造成問題? \n 而最後, 當所需要的基本場景已經建立完成, 由於客戶或機電整合流程的配合需求, 必須改變特定零件的組立架構, 或是零組件的參數尺寸, 前面的所有步驟都需要重來一次嗎? \n 以下是在面對上列諸多議題時, 以 Solvespace 建立一塊籃球板, 然後正設法放置到規定位置的參考場景檔案:  cd2024_footbasket_ball_spec_add_slvs_board.7z \n \n \n 操作過程如下: \n \n 開啟 Solvespace, 確認作圖單位為 mm, 繪製一個 100mmx200mmx300mm 的方塊零件, 準備最為籃球板. \n 由於 CoppeliaSim 內定的場景地面座標為 X-Y, 因此若在 Solvespace 中建立零件, 必須要確定零件的局部座標系與絕對坐標系的關係. \n 由於開啟 cd2023 模擬場景後, 發現所有的零件都以其自身的局域坐標系原點, 放在零件的正中央, 因此若將零件轉入 CoppeliaSim 後, 希望精確掌握零件的定位, 則在繪製零件草圖時, 必須設定好輪廓與絕對座標系統之間的關係. \n 另外, 由於 CoppeliaSim 4.5.1 版會將所有的轉入零件採同一個座標原點, 而非如舊版本轉入後各自以其局部座標系統進行定位. \n 而且還必須了解 CoppeliaSim 內建的尺寸單位為 m, 目前 Solvespace 轉出的製圖單位則是 mm, 因此中間差別了 1000 倍, 所以將作圖單位設為 mm 的 Solvespace 零件, 轉入 CoppeliaSim 若要使用其原先的作圖尺寸, 則必須縮小 0.001 倍. \n 之後, 還必須利用 Edit -> Shape reference frame -> Relocate to mesh center 將各零件的參考座標系統原點, 從廣域座標系原點, 轉換到零件個別的物件中心原點. \n 若零件轉入 CoppeliaSim 時選擇 Z 軸向上, 則籃球板零件轉入後, 將平躺在場景中, 若要轉至與現有的足球門相同方位, 則必須分別對自己的 X 軸與 Y 軸個旋轉 90 度. \n 最後再任選一座球門的 X, Y 座標系統原點位置(position), 逐步將 basketball board 放到正確的位置, 結果如:  cd2024_footbasket_ball_spec_add_slvs_board.7z \n \n \n 協同零組件繪圖: Onshape \n 協同分組報告: LaTeX -> pdf \n', 'tags': '', 'url': 'Practice.html'}, {'title': 'CoppeliaSim', 'text': 'CoppeliaSim 是一套開放原始碼的機器人模擬平台(Robot Simulation Platform) \n https://github.com/CoppeliaRobotics \n 下載用於 cd2024 協同產品設計實習課程的可攜 CoppeliaSim Windows 版本: \n CoppeliaSim 4.5.1 rev1 for IPv6.7z \xa0 (169MB, password required to download) \n https://www.coppeliarobotics.com/ \n https://forum.coppeliarobotics.com/ \xa0 \n https://manual.coppeliarobotics.com/ \n https://www.coppeliarobotics.com/research \n https://www.coppeliarobotics.com/previousVersions \n', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'Tools', 'text': 'English \n cd2024 將利用下列程式擷取出各相關英文資料的單字, 並製作網際連結頁面, 以協助學員查詢各英文單字的涵義及應用. \n      check_dict_from_cdict_net.py  (建立英文單字查詢 html 檔案) \n get_txt_from_pdf.py  (從 pdf 檔案中取出文字內容) \n 請利用上述兩個程式, 以 html 格式整理出下列文章的英文單字查詢涵義與應用資料. \n 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf  or  local download  (password required) \n ( Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析 ) \n MCAD \n Web-based: \n https://www.onshape.com/en/education/ \n SimScale \n CAEPlex \n ProtoTwin Simulate \n Manufacturing Models \n MKCAD Library \n Control \n How to pick a mobile robot simulator: A quantitative comparison of CoppeliaSim, Gazebo, MORSE and Webots with a focus on accuracy of motion.pdf  (2022) \n Based on our experiments and selected metrics, we conclude that  CoppeliaSim  is currently the best performing simulator, although Gazebo is not far behind and is a good alternative. \n Control System Design and Simulation (Control): \n CoppeliaSim 4.5.1 rev1 for IPv6.7z \xa0 (169MB, password required to download) \n', 'tags': '', 'url': 'Tools.html'}, {'title': 'WCMS', 'text': 'Operating Systems: \n Ubuntu2204_deaktop_vdi.7z  (need password to downlaod, size 4.5GB) \n win10_21h2.vdi  (need password to download, size 11.4GB) \n Web-based Content Management System (WCMS): \n Github:  https://github.com \n cmsite:\xa0 https://github.com/mdecycu/cmsite \xa0 \n Replit:  https://replit.com \n https://leo-editor.github.io/leo-editor/ \n pip install leo==6.6.4 ( for xml import ) \n @settings \n @data import-xml-tags \n @data import-html-tags \n', 'tags': '', 'url': 'WCMS.html'}, {'title': 'Portable', 'text': 'Portable packages: \n Portablegit \n SourceTree \n Putty \n Filezilla \n ShareX \n Kdiff3 \n TinyC \n MSYS2 \n Python \n ProcessExplorer \n Wink3 \n Zoomit \n OBS \n', 'tags': '', 'url': 'Portable.html'}, {'title': 'Putty', 'text': 'Putty is a free SSH client. \n Session Registry for Putty: \n 電腦\\HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham \n', 'tags': '', 'url': 'Putty.html'}, {'title': 'Github', 'text': '2FA:  Two-Factor Authentication \n Github Pages:  https://pages.github.com/ \n SSH and GPG keys: \n putty:  https://www.putty.org/ \n https://github.com/Bioruebe/UniExtract2 \n ssh-keygen \n Pull Requests \n Github Classroom:  https://classroom.github.com \n \n', 'tags': '', 'url': 'Github.html'}, {'title': 'cmsimde', 'text': 'ubuntu \n 使用 cmsimde 作為網際內容管理系統的倉儲, 在 Ubuntu 伺服器中進行協同, 由於是自建主機因此可用性與 localhost 相同, 斷線機率取決於工作站室中虛擬主機的網路與電力供應是否穩定: \n 1. 利用 " sudo update-rc.d stunnel4 defaults " 將 s.cycu.org 中的 stunnel4 設為與系統同步啟動. \n 2. 當 server.py 已經啟動, 使用者登入後可以利用以下指令, 列出各使用者啟動網頁編輯所對應的 PID (Process ID): \n ps -axo pid,comm,uname | grep "python3" \n 各用戶若希望刪除已經啟動的 Process, 可以找到所啟動的 PID 後, 以下列指令關閉服務 (若 PID = 1234): \n kill 1234 \n 其中, 系統管理者可以刪除所有 Processes, 而各用戶只能刪除各自所啟動的 Process. \n 3. 假如自己所分派到的網路 port 遭到占用, 可以利用下列指令查出使用該埠號的使用者帳號: \n 例如要查詢埠號 9210 埠號的使用情形, 指令為\xa0 lsof -i :9210, 其中 ls 為 list, of 為 open file, -i 中的 i 為 internet, :9210 表示要求列出與 port 9210 有關 internet 使用相關的資料. \n', 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Replit', 'text': '當 Edge 瀏覽器中判定 Replit 啟動 cmsite 編輯網站為不安全的釣魚網站時: \n Settings - Privacy, search and services - Security -\xa0 Microsoft Defender SmartScreen 選擇關閉 \n \n 使用下列 PyQt5 程式就能自帶瀏覽器開啟 cmsimde 內部啟動的編輯網站  https://localhost:9445 \n browser.py \n import sys\n\n\nfrom PyQt5.QtCore import QUrl\nfrom PyQt5.QtWidgets import QApplication\n\n\nfrom PyQt5.QtWebEngineWidgets import QWebEnginePage, QWebEngineView\n\n\nclass WebEnginePage(QWebEnginePage):\n    def certificateError(self, error):\n        error.ignoreCertificateError()\n        return True\n\n\ndef main(args):\n    app = QApplication(args)\n    webview = QWebEngineView()\n    page = WebEnginePage()\n    webview.setPage(page)\n    webview.load(QUrl("https://localhost:9445"))\n    webview.show()\n    sys.exit(app.exec_())\n\n\nif __name__ == "__main__":\n    main(sys.argv) \n .replit env user and email setup: \n GIT_AUTHOR_NAME = "username"\nGIT_AUTHOR_EMAIL = "email"\nGIT_COMMITTER_NAME = "username"\nGIT_COMMITTER_EMAIL = "email"\n \n /home/runner/repository_name \n /home/runner/.ssh/id_rsa \n /home/runner/.ssh/id_rsa.pub \n /home/runner/.ssh/config \n config: \n Host github.com\nUser git\nHostname github.com\n# git@github.com:github_username/repository_name.git \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Projects', 'text': 'Perpetual Motion Simulator: \n cad2023_w14.7z \xa0(password required to download) \n project1_w14_simple.7z \xa0(password required to download) \n cad2023_w14_perpetual_motion_simulator_template.py \xa0(password required to download) \n 相關資料查詢:  https://www.google.com/search?q=electromagnetic+force+perpetual+motion+simulator   \n \n triangle_perpetual_motion_simulator.7z \xa0 (password required to download) \n \n Steel ball balancing platform: \n \n Ball and Beam 系統相關資料查詢:  https://www.google.com/search?q=ball+and+beam+equation+of+motion \n 機械與控制系統設計資料查詢:  https://www.google.com/search?q=mechanical+control+system_design \n 其他參考資料:  http://163.17.20.49/AIT2010/ft_198.pdf \n \n ball_beam_balancing_PID_control_coppeliasim_1d_and_2d.7z  ( password required to download) \n 2019 Construction and theoretical study of a ball balancing platform.pdf  ( local download , 需要密碼) \n 其他參考資料查詢:  \n https://www.google.com/search?q=ball+balancing+platform+dynamics+equations+derivation \n https://www.google.com/search?q=application+of+"ball+balancing+platform+dynamics+system"', 'tags': '', 'url': 'Projects.html'}, {'title': 'Football', 'text': 'https://github.com/mdecd2023/2a3-pj3ag4 \n https://mdecd2023.github.io/2a3-pj3ag4 \n cd2023_pj3ag4_zmq_football4.7z  (password required to download) \n', 'tags': '', 'url': 'Football.html'}, {'title': 'Basketball', 'text': 'Single four-wheeler basketball shooting game: \n Four-wheeler design \n Top picking and shooting mechanism design \n https://github.com/Asadullah-Dal17/Yolov4-Detector-and-Distance-Estimator \xa0 ( opencv & numpy ) \n https://www.mysteinbach.ca/game-zone/1461/3d-basketball/ \n Design of a RoboCup shooting mechanism.pdf  \n Robot design handbook.pdf \n AUTOMATIC SHOOTING MECHANISMAND ROBOT HAVING THE SAME.pdf \n https://www.citruscircuits.org/bb17.html \n A METHOD TO DETECT, COLLECT AND RETRIEVE A BALL \n \n Five four-wheelers basketball game: \n \n', 'tags': '', 'url': 'Basketball.html'}, {'title': 'Golf', 'text': '\n', 'tags': '', 'url': 'Golf.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};